#sidebar EpcisSidebar

= Fosstrak EPCIS Download =

<wiki:toc max_depth="3"/>

== Latest Release ==

|| *Module* || *Version* || *Download* ||
|| EPCIS Repository || 0.5.0 || [https://oss.sonatype.org/content/repositories/public/org/fosstrak/epcis/epcis-repository/0.5.0/epcis-repository-0.5.0-bin-with-dependencies.zip epcis-repository-0.5.0-bin-with-dependencies.zip] ||
|| EPCIS Capture Client || 0.5.0 || [https://oss.sonatype.org/content/repositories/public/org/fosstrak/epcis/epcis-captureclient/0.5.0/epcis-captureclient-0.5.0-bin-with-dependencies.zip epcis-captureclient-0.5.0-bin-with-dependencies.zip] ||
|| EPCIS Query Client || 0.5.0 || [https://oss.sonatype.org/content/repositories/public/org/fosstrak/epcis/epcis-queryclient/0.5.0/epcis-queryclient-0.5.0-bin-with-dependencies.zip epcis-queryclient-0.5.0-bin-with-dependencies.zip] ||
|| || || ||
|| EPCIS Webadapter || 0.1.0 || [https://oss.sonatype.org/content/repositories/public/org/fosstrak/webadapters/epcis-webadapter/0.1.0/epcis-webadapter-0.1.0-bin-with-dependencies.zip epcis-webadapter-0.1.0-bin-with-dependencies.zip] ||

The source code for these binaries can be found at http://fosstrak.googlecode.com/svn/epcis/tags/epcis-0.5.0 and http://fosstrak.googlecode.com/svn/webadapters/tags/epcis-webadapter-0.1.0.

== Previous Releases ==
All previous releases of Fosstrak EPCIS can be found in the [https://oss.sonatype.org/content/repositories/public/org/fosstrak/ distribution repository].

== System Requirements ==
 * JDK 1.6.0_05 or higher

== Installation and Usage Instructions ==
Please see the [EpcisUserGuide User Guide] for installation and usage instructions.

== Changelog ==

=== Version 0.5 (released December 28, 2010) ===
==== EPCIS Repository ====
 * Fixed parsing of query parameter with more than one value in the list of strings when querying for extension fields (e.g., EQ_fieldname).
 * Added support for capturing EPCIS masterdata. Please see the user-guide or the mailing list for details on how to use the new interface. Thanks to Nikos Kefalakis.
 * Updated CXF dependencies to 2.2.9 and JAXB to 2.2
 * Added support for storing milliseconds of eventTime and recordTime to the repository. Fixes issues with fine-grained time queries and with rounded time values in query responses. Thanks to Adrien Laurence.
 * Added a JSP with an HTML form to quickly debug and submit capture requests directly via browser.
 * Introduced JSP pages for the repository to show the requested information for browser GET requests.
 * Fixed handling of dbReset scripts. Furthermore, use Hibernate to run the scripts (removes the need of deprecated method).
 * Disabled the Hibernate query_cache since we're mainly running updates/inserts and no queries.
 * Set the antiResourceLocking flag in the application context to true in order to prevent JAR file locking and allow clean undeploys on Windows systems.
 * Use correct number of SQL joins for queries with two or more EQ_fieldname parameters. Fixes [http://sourceforge.net/tracker/?func=detail&aid=2495950&group_id=170911&atid=856005 2495950]. Thanks to Oscar Saiz.

=== Version 0.4.2 (released February 3, 2009) ===
==== EPCIS Repository ====
 * Subscriptions not tolerant to server restart. Fixes [http://sourceforge.net/tracker/?func=detail&aid=2379949&group_id=170911&atid=856005 2379949]. Thanks to Marc-Antoine Mouilleron.
 * Fixed query subscription error (unable to serialize and store objects of type !ArrayOfString to database) Fixes [http://sourceforge.net/tracker/?func=detail&aid=2379542&group_id=170911&atid=856005 2379542]. Thanks to Nektarios Leontiadis.
 * Updated demo data. Example events are now compliant with EPCglobal's Core Business Vocabulary.
 * Added "resource-ref" mapping in web.xml for easier deployment in containers other than Tomcat.
 
=== Version 0.4.1 (released September 2, 2008) ===
==== EPCIS Repository ====
 * Results of subscribed queries were not reported correctly. Fixes [http://sourceforge.net/tracker/?func=detail&aid=2088556&group_id=170911&atid=856005 2088556].
 * Subscriptions were not stored in the database. Fixes [http://sourceforge.net/tracker/?func=detail&aid=2088551&group_id=170911&atid=856005 2088551].

=== Version 0.4.0 (released July 29, 2008) ===
==== EPCIS Repository ====
 * Renamed packages from org.accada to org.fosstrak.

=== Version 0.3.2 (released June 4, 2008) ===
==== EPCIS Repository ====
 * Fixed parsing of values for extension fields. Fixes [http://sourceforge.net/tracker/?func=detail&aid=1964350&group_id=170911&atid=856005 1964350].
 * Fixed epcis_demo_data.sql. (Demo data did not match latest schema.)

=== Version 0.3.1 (released March 24, 2008) ===
==== EPCIS Repository ====
 * Fixed inconsistent capitalization of table names, which caused problems on case-sensitive platforms (e.g., Linux).

=== Version 0.3.0 (released March 20, 2008) ===
==== EPCIS Repository ====
 * Introduced Spring IoC container for bean wiring and application initialization.
 * Introduced interfaces wherever reasonable (program to an interface, not an implementation), and improved extensibility and interoperability through application layering.
 * Added a context listener which performs the initialization work (e.g., initializing the logging subsystem) when the application is deployed.
 * Added support for storing custom, non-standard vocabulary fields.
 * Improved and centralized all configuration parameters in a consistent application.properties file.
 * Use !StringBuilder instead of !StringBuffer or string concatenation wherever reasonable, for improved performance.
 * Use the commons-logging API as a wrapper for Log4J for all the log statements.
 * Added database indexes wherever reasonable for improved performance.
 * Moved EPCIS WSDL and schema files to module epcis-commons.
 * Removed 'vocabularies' table from the database schema - the mapping of vocabulary names to the corresponding database table is now handled in the code.
 * Added utility class for parsing and printing !QueryResults.
 * Replaced Axis-generated Web service stubs with CXF-generated Java beans.
 * Fixed !TimeParser to catch any exceptions caused by invalid input and wrap them into !QueryParameterExceptions.
 * Query Interface: replaced the Web service framework Apache Axis 1 with Apache CXF which prevents many problems and avoids many workarounds implied by Axis, and improves performance.
 * Query Interface: introduced a JAXB data binding to map Web service requests and responses to Java beans.
 * Query Interface: added support for HTTPS binding for query callback interface.
 * Query Interface: added support for querying custom, non-standard vocabulary fields.
 * Query Interface: added a servlet to perform the initialization work for the !QueryOperationsModule in cases where Spring cannot be used.
 * Query Interface: added support for database transactions - queries which modify the database (e.g., add vocabularies) either succeed or fail in their entirety.
 * Query Interface: standing query results are returned within an EPCISQueryDocument whose EPCISBody contains the response payload XML, as specified in the EPCIS standard.
 * Query Interface: callback of results for standing queries is retried (up to 3 times) if the destination cannot be reached or in cases of network problems.
 * Query Interface: improved handling of children-relationships for masterdata vocabularies.
 * Query Interface: throw !QueryParameterException for any invalid user-provided query parameter values.
 * Query Interface: fixed issues with not releasing database connections which prevented sessions from being closed under certain conditions and crashed the entire repository.
 * Query Interface: 'getVendorVersion' must return a valid URI-formated value.
 * Query Interface: ordering of events according to the 'orderBy' and 'orderDirection' query parameters must be global across all events.
 * Query Interface: restriction of events according to 'eventCountLimit' must be global across all events.
 * Query Interface: query returns events out of specified time frame. Fixes [http://sourceforge.net/tracker/?func=detail&aid=1876336&group_id=170911&atid=856005 1876336].
 * Capture Interface: added initialization logic to the !CaptureOperationsServlet in cases where Spring cannot be used.
 * Capture Interface: introduced Hibernate which replaces the JDBC statements for persisting events to the database, adds an additional database abstraction layer, and thus allows for the possibility of integrating other (non-MySQL) data stores. Thanks to Sean Wellington.
 * Capture Interface: added support for database transactions - requests either succeed or fail in their entirety. Thanks to Sean Wellington.
 * Set the "defaultAutoCommit" property of the database connection pool to false. Thanks to Sean Wellington.
 * Capture Interface: check value of the 'eventTimeZoneOffset' field to match the expected pattern.
 * Capture Interface: check elements in the 'epcList', 'childEPCs', and 'parentID' fields to match the pure identity URI pattern as defined in EPCglobal Tag Data Standard 1.3.1.
 * Capture Interface: return HTTP status code different from 200 for any invalid user-provided input (e.g., invalid XML schema, invalid XML values).