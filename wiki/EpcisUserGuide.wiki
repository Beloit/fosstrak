#sidebar EpcisSidebar

= EPCIS User Guide =

<wiki:toc max_depth="2"/>

== About this Guide ==

This guide is intended to help users get started with the Fosstrak EPCIS module. It outlines the steps to follow in order to set up your own EPCIS repository and describes how to interact with such a repository.

If you just want to see Fosstrak's EPCIS repository in action and explore its features and functionalities, you might want to try our Query and/or Capture client applications without setting up your own repository. If, however, you want to run your own instance of the EPCIS repository, or if you like to incorporate Fosstrak's EPCIS implementation into your own project, continue reading.

If this guide doesn't answer the questions you may have, feel free to post them to the [http://groups.google.com/group/fosstrak-epcis Fosstrak EPCIS mailing] list.

== Getting Started ==

This section includes a step-by-step tutorial describing how to set up your own EPCIS repository and describes how to use the client applications to send EPCIS capture and query requests to your own repository.

=== Setting up your own Repository ===

In order to set up your own EPCIS repository, follow the step-by-step tutorial outlined below:

  * Make sure you have have an [http://tomcat.apache.org/ Apache Tomcat] servlet container (version 5.5 or higher) running. It will be used to deploy and run the EPCIS repository web application.

  * Download the Fosstrak EPCIS repository distribution and place the WAR file contained in the archive in your Tomcat's webapps directory. After restarting Tomcat, the WAR file will be exploded.

  * Install a [http://dev.mysql.com/downloads/mysql/5.0.html MySQL server] (version 5.0 or higher). It will be used by the EPCIS repository to store event data. (If you intend to use a Microsoft SQL Server, you should have a look at [http://sourceforge.net/mailarchive/message.php?msg_id=21116989 this thread] on the mailing list.)

  * Make sure that web applications deployed to Tomcat can access your MySQL server by installing the MySQL [http://www.mysql.com/products/connector/j/ Connector/J] driver. This is usually done by copying the `mysql-connector-java-<version>-bin.jar` into Tomcat's `lib` (version 6) or `common/lib` (version 5.5) directory.

  * Set up a MySQL database for the EPCIS repository to use. Log into the MySQL Command Line Client as root and perform the following steps:<br/>

    * Create the database (in this example, we'll use epcis as the database name).
      `mysql> CREATE DATABASE epcis;`

    * Create a user that is allowed access to the newly created database (in this example, we'll use the user name _epcis_ and password _epcis_).
      `mysql> GRANT SELECT, INSERT, UPDATE, DELETE ON epcis.* TO epcis IDENTIFIED BY 'epcis';`

    * Create the database schema by running the setup script contained in the archive you downloaded. (Make sure you are connected to the newly created database before running the script.)
      `mysql> USE epcis;`
      `mysql> SOURCE <path-to-unpacked-download>/epcis_schema.sql`

    * Optionally populate the repository with some sample data.
      `mysql> SOURCE <path-to-unpacked-download>/epcis_demo_data.sql`

  * Configure the repository to connect to the newly created database. In a default installation of Tomcat, the database connection settings can be found in `$TOMCAT_HOME/conf/Catalina/localhost/epcis-repository-<version>.xml`. The relevant attributes that must be adjusted are _username_, _password_ and _url_.
  {{{
<Resource
    name="jdbc/EPCISDB"
    type="javax.sql.DataSource"
    auth="Container"
    username="epcis"
    password="epcis"
    driverClassName="com.mysql.jdbc.Driver"
    url="jdbc:mysql://localhost:3306/epcis?autoReconnect=true">
</Resource>
  }}}
  If you used the default user name, password and database name from the examples above, then you don't need to reconfigure anything here. If, however, you used different values, you need to stop Tomcat, change the values and start Tomcat again.

  * Check if the application is running. In a default installation of Tomcat, the capture and query interfaces will now be available at `http://localhost:8080/epcis-repository-<version>/capture` and `http://localhost:8080/epcis-repository-<version>/query`, respectively. When you open the capture interface's URL in your web browser, you should see a short information page similar to this:
    {{{
This service captures EPCIS events sent to it using HTTP POST requests.
The payload of the HTTP POST request is expected to be an XML document
conforming to the EPCISDocument schema.

For further information refer to the xml schema files or check the Example
in 'EPC Information Services (EPCIS) Version 1.0 Specification', Section 9.6.
    }}}
  To also check if the query interface is set up correctly, point your browser to its URL and append the string `?wsdl` to it. The WSDL file of the query service should now be displayed in your browser. Proceed to the next sections to test your repository installation using one of our client applications.

  * Check the application's log file in case of problems. The application's log is kept in `TOMCAT_HOME/logs/epcis-repository.log`. In case of problems with your own EPCIS repository instance, this is the first place to look for information about errors or specific exceptions thrown by the application.

=== Using the Capture Client to send Events to a Repository ===

  * Download the capture client binaries.

  * Run the executable JAR file contained in the archive you downloaded. This will launch the Fosstrak EPCIS Capture Client.
    `java -jar epcis-captureclient-<version>.jar`

  * In the GUI, you need to specify the URL of the EPCIS repository you want to connect to. You can either use your local repository instance (e.g., `http://localhost:8080/epcis-repository-<version>/capture>`), our public repository (`http://demo.fosstrak.org/epcis/capture`), or any other EPCIS repository. You can now fill in the EPCIS event data and submit the EPCIS capture request by clicking "Generate event".

If you intend to use our capture client library in your own Java project, you should refer to the "How to Capture EPCIS Events" section below.

=== Using the Query Client to browse a Repository ===

  * Download the query client binaries and follow the same steps as above. You can now fill in the query parameters in the GUI and submit the request to the repository by clicking "Run query". The results of the query will be displayed in a separate window.

If you intend to use our query client API library in your own Java project, you should refer to the How to Query for EPCIS Events section below.

== Interacting with a Repository ==

This section shows how to use the basic features of Fosstrak's EPCIS implementation, i.e., how to send EPCIS events to the capture interface and how to create an EPCIS query for retrieving information from the repository.

=== How to Capture EPCIS Events ===
In order to capture EPC data you need to wrap the data into XML conforming to the EPCIS XML schema for event types. This EPCIS event must then be sent as the payload in an HTTP POST request to the repository's capture interface. An example event, an ObjectEvent, serialized into XML might look as follows: